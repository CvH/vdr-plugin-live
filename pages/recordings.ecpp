<%pre>
#include <vdr/plugin.h>
#include <vdr/config.h>

#include "exception.h"
#include "tools.h"
#include "epg_events.h"

#include "recordings.h"
#include "setup.h"

using namespace vdrlive;
using namespace std;

</%pre>
<%args>
</%args>
<%session scope="global">
	bool logged_in(false);
</%session>
<%request scope="page">
RecordingsTree recordingsTree(LiveRecordingsManager());
EpgEvents epgEvents;
</%request>
<%include>page_init.eh</%include>
<%cpp>
	if (!logged_in && LiveSetup().UseAuth()) return reply.redirect("login.html");

	pageTitle = tr("Recordings");
</%cpp>
<& pageelems.doc_type &>
<html>
	<head>
		<title>VDR-Live - <$ pageTitle $></title>
		<& pageelems.stylesheets &>
		<& tooltip.javascript var=("domTT_styleClass") value=("domTTepg") &>
		<& pageelems.ajax_js &>
		<script type="text/javascript" src="treeview.js"></script>
	</head>
	<body onload="<& pageelems.infobox_start_update &>">
		<& pageelems.logo &>
		<& menu active=("recordings") &>
		<div class="inhalt">
			<div class="boxheader"><div><div><$ tr("List of recordings") $></div></div></div>
%			if (Recordings.Count() == 0) {
			<$ tr("No recordings found") $>
%			} else {
			<div class="recordings">
			<ul class="recordingslist" style="display: block;">
<& recordings.recordings_item &>
			</ul>
			</div>
%			}
		</div>
%			if (Recordings.Count() > 0) {
		<div class="epg_data" style="display: none;">
<& recordings.recordings_data &>
		</div>
%			}
	</body>
</html>
<%include>page_exit.eh</%include>

<# ---------------------------------------------------------------------- #>

<%def recordings_item>
<%args>
	path[];
	int level = 0;
</%args>
<%cpp>
RecordingsTree::Map::iterator iter;
RecordingsTree::Map::iterator end = recordingsTree.end(path);

for (iter = recordingsTree.begin(path); iter != end; ++iter) {
	RecordingsTree::RecordingsItemPtr recItem = iter->second;
	string folderimg("folder_closed.png");
	string collapseimg("plus.png");
	if (recItem->IsDir()) {
</%cpp>
	<li class="recording">
		<& rec_item_dir name=(recItem->Name()) level=(level) &>
<%cpp>
		cxxtools::QueryParams recItemParams(qparam, false);
		for (path_type::const_iterator i = path.begin(); i != path.end(); ++i) {
			recItemParams.add("path", *i);
		}
		recItemParams.add("path", recItem->Name());
		recItemParams.add("level", lexical_cast<string, int>(level + 1));
</%cpp>
		<ul class="recordingslist" style="display: none;">
%		callComp("recordings.recordings_item", request, reply, recItemParams);
    	</ul>
	</li>
%	}
%}
<%cpp>
for (iter = recordingsTree.begin(path); iter != end; ++iter) {
	RecordingsTree::RecordingsItemPtr recItem = iter->second;
    if (!recItem->IsDir()) {
		EpgEventPtr epgEvent(RecordingsTree::CreateEpgEvent(recItem));
		if (epgEvent) {
			epgEvents.push_back(epgEvent);
		}
		string day(FormatDateTime("%a,", recItem->StartTime()));
		string dayLen(lexical_cast<string, int>(day.length() - 1) + ".25em;");
		string hint(tr("Click to view details.")); if (epgEvent && !epgEvent->ShortDescr().empty()) hint = (epgEvent->ShortDescr() + "<br />" + hint);
</%cpp>
	<li class="recording">
	<& rec_item_file name=(recItem->Name()) level=(level) id=(recItem->Id()) day=(day) dayLen=(dayLen) startTime=(recItem->StartTime()) hint=(hint) shortDescr=(epgEvent ? epgEvent->ShortDescr() : "") archived=(epgEvent ? epgEvent->Archived() : "") archiveId=(recItem->ArchiveId()) &>
    </li>
<%cpp>
	}
}
</%cpp>
</%def>

<# ---------------------------------------------------------------------- #>

<%def recordings_data>
<%cpp>
	// create hidden div for the tooltip hints.
	for (vector<EpgEventPtr>::iterator i = epgEvents.begin(); i != epgEvents.end(); ++i) {
		EpgEventPtr epg = *i;
		string start(epg->StartTime("%a,") + string(" ")
				+ epg->StartTime(tr("%b %d %y")) + string(" ")
				+ epg->StartTime(tr("%I:%M %p")));
		string tools_component = epg->Archived().empty() ? "recordings.rec_tools" : "recordings.archived_disc" ;
</%cpp>
		<& pageelems.epg_tt_box boxId=(epg->Id()) caption=(epg->Caption()) tools_comp=(tools_component) time=(start) title=(epg->Title()) short_descr=(epg->ShortDescr()) long_descr=(epg->LongDescr()) archived=(epg->Archived()) elapsed=(epg->Elapsed()) &>
<%cpp>
	}
</%cpp>
</%def>

<# ---------------------------------------------------------------------- #>

<%def rec_tools>
<%args>
	string id;
</%args>
<& pageelems.ajax_action_href action="play_recording" param=(id) tip=(tr("play this recording.")) image="play.png" alt="" &>
</%def>

<# ---------------------------------------------------------------------- #>

<%def archived_disc>
<%args>
	string archived;
</%args>
<img src="<$ LiveSetup().GetThemedLink("img", "on_dvd.png") $>" alt="on_dvd" <& tooltip.hint text=(archived) &> />
</%def>

<# ---------------------------------------------------------------------- #>

<%def rec_item_dir>
<%args>
	string name;
	int level;
	string collapseimg = "plus.png";
	string folderimg = "folder_closed.png";
</%args>
	<div class="recording_item" onclick="Toggle(this)">
	<div class="recording_imgs"><%cpp> reply.out() << StringRepeat(level, "<img src=\"transparent.png\" alt=\"\" width=\"16px\" height=\"16px\" />"); </%cpp><img class="recording_expander" src="<$ LiveSetup().GetThemedLink("img", collapseimg) $>" alt="" /><img class="recording_folder" src="<$ LiveSetup().GetThemedLink("img", folderimg) $>" alt="" /></div>
	<div class="recording_spec">
	  <div class="recording_name"><$ name $></div>
    </div>
	<div class="recording_actions">&nbsp;</div>
	</div>
</%def>

<# ---------------------------------------------------------------------- #>

<%def rec_item_file>
<%args>
	string name;
	int level;
	string id;
	string day;
	string dayLen;
	time_t startTime;
	string hint;
	string shortDescr;
	string archived;
	string archiveId;
</%args>
	<div class="recording_item">
	<div class="recording_imgs"><%cpp> reply.out() << StringRepeat(level + 1, "<img src=\"transparent.png\" alt=\"\" width=\"16px\" height=\"16px\" />"); </%cpp><%cpp> if (!archived.empty()) { </%cpp><& archived_disc archived=(archived) &><%cpp> } else { </%cpp><img src="<$ LiveSetup().GetThemedLink("img", "movie.png") $>" alt="movie" /><%cpp> } </%cpp></div>
	<div class="recording_spec">
		<div class="recording_day" style="width: <$ dayLen $>"><$ day $></div>
		<div class="recording_date"><$ FormatDateTime(tr("%b %d %y"), startTime) $></div>
		<div class="recording_time"><$ FormatDateTime(tr("%I:%M %p"), startTime) $></div>
		<div class="recording_name" <& tooltip.hint text=(hint) &><& tooltip.display domId=(id) &>><$ name $><br /><%cpp>if ((name != shortDescr) && (!shortDescr.empty())) {</%cpp><span><$ shortDescr $></span><%cpp> } else { </%cpp><span>&nbsp;</span><%cpp> } </%cpp></div>
	</div>
	<div class="recording_actions">
<%cpp>
		if (archived.empty()) {
</%cpp>
		<& pageelems.ajax_action_href action="play_recording" param=(id) tip=(tr("play this recording.")) image="play.png" alt="" &>
<%cpp>
	    }
		else {
</%cpp>
		<img src="transparent.png" alt="" width="16px" height="16px" />
<%cpp>
		}
</%cpp>
		<img src="<$ LiveSetup().GetThemedLink("img", "edit.png") $>" alt="" />
		<img src="<$ LiveSetup().GetThemedLink("img", "del.png") $>" alt="" />
	</div>
<%cpp>
	if (! archived.empty()) {
</%cpp>
	<div class="recording_arch"><$ archived $></div>
<%cpp>
	}
</%cpp>
	</div>
</%def>
