<%pre>
#include <vdr/i18n.h>
#include "timers.h"
#include "tools.h"

using namespace vdrlive;

</%pre>
<%include>page_init.eh</%include>
<%cpp>
	pageTitle = tr("Timers");

	cMutexLock timersLock( &LiveTimerManager() );
	SortedTimers& timers = LiveTimerManager().GetTimers();
</%cpp>
<& pageelems.doc_type &>
<html>
	<head>
		<title>VDR-Live - <$ pageTitle $></title>
		<link rel="stylesheet" type="text/css" href="/styles.css" />
	</head>
	<body>
		<& pageelems.logo &>
		<& menu active=("timers") &>
		<div class="inhalt">
%			if (timers.size() == 0) {
				Keiner Timer definiert
%			} else {
			<table class="timers" cellspacing="0" cellpadding="0">
				<tr>
					<td class="head">&nbsp;</td>
					<td class="head"><$ tr("Active") $></td>
					<td class="head"><$ tr("Channel") $></td>
					<td class="head"><$ tr("Date") $></td>
					<td class="head"><$ tr("Start") $></td>
					<td class="head"><$ tr("Stop") $></td>
					<td class="head">&nbsp;</td>
					<td class="head"><$ tr("File") $></td>
				</tr>
<{
				bool active = false;
				for (SortedTimers::iterator timer = timers.begin(); timer != timers.end(); ++timer) {
}>
				<tr class="<$ active ? "active" : "" $>">
					<td><button type="button" class="smallbutton" onclick="location.href='edit_timer.html?timerid=<$ timers.GetTimerId(*timer) $>';"><$ tr("Edit") $></button></td>
					<td><img src="/<$ (timer->Flags() & tfActive) ? "active" : "inactive" $>.png" alt="Aktiv?" /></td>
					<td><$ timer->Channel()->Name() $></td>
					<td><$ timer->WeekDays() > 0 ? *cTimer::PrintDay(0, timer->WeekDays()) : FormatDateTime(tr("%a, %b %d"), timer->Day()) $></td>
					<td><$ FormatDateTime(tr("%I:%M %p"), timer->StartTime()) $></td>
					<td><$ FormatDateTime(tr("%I:%M %p"), timer->StopTime()) $></td>
					<td><{ if (timer->Recording()) { }><img src="/record.png" alt="Record" /><{ } }></td>
					<td><$ timer->File() $></td>
				</tr>
<{
					active = !active;
				}
			}
}>
			</table>
		</div>
	</body>
</html>
<%include>page_exit.eh</%include>
