<%pre>
#include <vdr/plugin.h>
#include <vdr/channels.h>
#include <vdr/epg.h>
#include <vdr/config.h>
#include <vdr/i18n.h>
#include "tools.h"

using namespace vdrlive;

</%pre>
<%args>
</%args>
<{

cSchedulesLock schedulesLock;
const cSchedules* Schedules = cSchedules::Schedules(schedulesLock);


}>
<html>
	<head>
		<title>VDR-Live - <$ tr("What's on next?") $></title>
		<link rel="stylesheet" type="text/css" href="/styles.css" />
	</head>
	<body>
		<div class="left_area">
			<img src="logo.png" alt="VDR Live!" border="0" />
<& menu >
		</div>
		<div class="inhalt">
			<div class="head_box">
				<$ tr("What's on next?") $>
			</div>

<{
	for (cChannel *Channel = Channels.First(); Channel; Channel = Channels.Next(Channel)) {
		if (!Channel->GroupSep()) {
			const cSchedule *Schedule = Schedules->GetSchedule(Channel);
			if (Schedule) {
				const cEvent *Event = Schedule->GetFollowingEvent();
					if (Event) {
						std::string title(Event->Title() ? Event->Title() : "");
						std::string short_description(Event->ShortText() ? Event->ShortText() : "");
						std::string description(Event->Description() ? Event->Description() : "");
						std::string start(Event->StartTime() ? FormatDateTime(tr("%I:%M %p"), Event->StartTime()) : "");
						std::string end(Event->EndTime() ? FormatDateTime(tr("%I:%M %p"), Event->EndTime()) : "");
}>
<& event_widget title=(title) short_description=(short_description) description=(description) channel_name=(Channel->Name()) start=(start) end=(end)>
<{
					}
			}
		}
	}
}>
		</div>
	</body>
</html>
