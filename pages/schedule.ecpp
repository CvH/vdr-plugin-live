<%pre>
#include <vdr/plugin.h>
#include <vdr/channels.h>
#include <vdr/epg.h>
#include <vdr/config.h>
#include "setup.h"
#include "tools.h"

using namespace vdrlive;

</%pre>
<%args>
int channel = -1;
</%args>
<{
	cSchedulesLock schedulesLock;
	const cSchedules* schedules = cSchedules::Schedules(schedulesLock);
	cChannel* Channel;

	ReadLock channelsLock( Channels );
	if (channelsLock) {
		if (channel > 0) {
			Channel = Channels.GetByNumber(channel);
		} else {
			Channel = Channels.Get(Channels.GetNextNormal(-1));
		}

}>
<html>
	<head>
		<title>VDR Live - <$ tr("Schedule") $></title>
		<link rel="stylesheet" type="text/css" href="/styles.css" />
	</head>
	<body>
		<div class="left_area">
			<img src="logo.png" alt="VDR Live!" border="0" />
<& menu >
		</div>
		<div class="inhalt">
			<div class="head_box">
				<table>
					<tr>
						<td><? Channel ? Channel->Name() ?></td>
						<td>
							<form name="channels" id="channels">
<& channels_widget name=("channel") selected=(Channel ? *Channel->GetChannelID().ToString() : "") onchange=("document.forms.channels.submit()") &>
							</form>
						</td>
					</tr>
				</table>
			</div>

<{
		if (Channel) {
			const cSchedule *Schedule = schedules->GetSchedule(Channel);
			if (Schedule) {
}>
			<table class="schedule" cellspacing="0" callpadding="0">
<{
				bool active_line = false;
				std::string current_day = "";
				const cEvent* PresentEvent = Schedule->GetPresentEvent();
				time_t now = time(NULL) - ::Setup.EPGLinger * 60;
				for (const cEvent *Event = Schedule->Events()->First(); Event; Event = Schedule->Events()->Next(Event)) {
					if (Event->EndTime() <= now && Event != PresentEvent)
						continue;

					active_line = !active_line;
					std::string title(Event->Title() ? Event->Title() : "");
					std::string short_description(Event->ShortText() ? Event->ShortText() : "");
					std::string description(Event->Description() ? Event->Description() : "");
					std::string start(Event->StartTime() ? FormatDateTime(tr("%I:%M %p"), Event->StartTime()) : "");
					std::string end(Event->EndTime() ? FormatDateTime(tr("%I:%M %p"), Event->EndTime()) : "");
					std::string day(Event->StartTime() ? FormatDateTime(tr("%A, %b %d %Y"), Event->StartTime()) : "");

					if (current_day != day) {
						current_day = day;
}>
				<tr>
					<td class="head" colspan="3"><$ current_day $></td>
				</tr>
<{
					}
}>
				<tr class="<? active_line ? "active" ?>">
					<td><$ start $> - <$ end $></td>
					<td><strong><$ title $></strong><br /><$ short_description $><br /></td>
					<td>&nbsp;</td>
				</tr>
<{
			}
}>
			</table>
<{
			} else {
}>
		Kein Schedule für Channel <$ Channel->Number() $>
<{
		}
		} else {
}>
		Kein Channel mit der Nummer <$ channel $>
<{
		}
	}
}>
	</body>
</html>
